#!/usr/bin/env fish

function set_sem_env -a SEM
	if test -n "$SEM"
		set -U UNI_SEM $SEM
	else
		cd $UNI_DIR
		set -U UNI_SEM (eza --only-dirs --icons never --color never | fzf -f "!champs !msc !notes" | fzf)
	end

	set -U UNI_SEM_DIR $UNI_DIR/$UNI_SEM
	set -U UNI_SEM_NOTES_DIR $UNI_NOTES_DIR/$UNI_SEM
end

function set_course_env -a COURSE
	if test -n "$COURSE"
		set -U UNI_COURSE $COURSE
	else
		cd $UNI_SEM_DIR
		set -U UNI_COURSE (eza --only-dirs --icons never --color never | fzf )
	end

	set -U UNI_COURSE_DIR $UNI_SEM_DIR/$UNI_COURSE
	set -U UNI_COURSE_NOTES_DIR $UNI_SEM_NOTES_DIR/$UNI_COURSE
end

function set_hw_env -a HW
	if test -n "$HW"
		set -U UNI_HW $HW
	else
		cd $UNI_COURSE_DIR/hw
		set -U UNI_HW (eza --only-dirs --icons never --color never | fzf)
	end

	set -U UNI_HW_DIR $UNI_COURSE_DIR/hw/$UNI_HW
end

function init_hw
	cp -r $UNI_DIR/msc/hw/* .

	set hwtitle (string lower $UNI_COURSE-$UNI_HW)
	mv ./HWTemplate.tex ./$hwtitle.tex
	mv ./HWTemplate.pdf ./$hwtitle.pdf
end

if test -z "$EDITOR"
	echo "please make sure \$EDITOR is set"
	exit 1
end

if test -z (which fzf)
	echo "please make sure `fzf` is installed"
	exit 1
end

if test -z "$UNI_DIR"
	read -f -P "where is the uni repository?\n> " UNI_DIR
end

if test -z "$UNI_NOTES_DIR"
	read -f -P "where is the uni-notes repository?\n> " UNI_NOTES_DIR
end

switch $argv[1]
	case switch
		set current_dir $(pwd)
		switch $argv[2]
			case sem semester
				set_sem_env
			
			case course class
				if test -z "$UNI_SEM"; and test -z "$UNI_SEM_DIR"
					set_sem_env
				end
				set_course_env

			case hw homework
				if test -z "$UNI_COURSE"; and test -z "$UNI_COURSE_DIR"
					set_course_env
				end
				set_hw_env

			case all
				set_sem_env
				set_course_env
				set_hw_env

			case ''
				set_course_env

			case '*'
				echo "Unrecognized input."
				exit 1
		end
		cd $current_dir
	
	case cd
		switch $argv[2]
			case course class
				cd $UNI_COURSE_DIR

			case sem semester
				cd $UNI_SEM_DIR

			case hw homework
				cd $UNI_HW_DIR

			case notes
				switch $argv[3]
					case course class
						cd $UNI_COURSE_NOTES_DIR

					case sem semester
						cd $UNI_SEM_NOTES_DIR

					case ''
						cd $UNI_NOTES_DIR

					case '*'
						echo "Unrecognized input."
						exit 1
				end

			case uni
				cd $UNI_DIR

			case ''
				cd $UNI_DIR

			case '*'
				echo "Unrecognized input."
				exit 1
		end

	case hw
		switch $argv[2]
			case next
				set current_dir $(pwd)
				cd $UNI_COURSE_DIR/hw

				set hwnum (string pad -w 2 -c 0 (math max (command ls | string match 'hw*' | string sub -s -2 | string join ',') + 1))

				set_hw_env hw$hwnum
				echo creating $UNI_HW in $UNI_COURSE
				mkdir $UNI_HW_DIR
				cd $UNI_HW_DIR
				init_hw

				cd $current_dir

			case init
				set_hw_env (basename (pwd))
				init_hw
		end

	case notes
		switch $argv[2]
			case lg git
				lazygit -p $UNI_NOTES_DIR

			case '*'
				echo "Unrecognized input."
				exit 1
		end

	case lg git
		switch $argv[2]
			case uni
				lazygit -p $UNI_DIR
			
			case notes
				lazygit -p $UNI_NOTES_DIR

			case ''
				lazygit -p $UNI_DIR

			case '*'
				echo "Unrecognized input."
				exit 1
		end

	case edit
		switch $argv[2]
			case flake
				$EDITOR $UNI_DIR/flake.nix

			case self setup script
				$EDITOR $UNI_DIR/script

			case ''
				$EDITOR $UNI_DIR/.

			case '*'
				$EDITOR $UNI_DIR/$argv[2..]
		end

	case '*'
		echo "Unrecognized input."
		exit 1
end
