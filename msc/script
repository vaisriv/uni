#!/usr/bin/env fish

set script_location $UNI_DIR/msc/script

function set_sem_env
	cd $UNI_DIR
	set -U UNI_SEM (ls --only-dirs | fzf -f "!champs !msc !notes" | fzf)

	set -U UNI_SEM_DIR $UNI_DIR/$UNI_SEM
	set -U UNI_SEM_NOTES_DIR $UNI_NOTES_DIR/$UNI_SEM
end

function set_course_env
	cd $UNI_SEM_DIR
	set -U UNI_COURSE (ls --only-dirs | fzf )

	set -U UNI_COURSE_DIR $UNI_SEM_DIR/$UNI_COURSE
	set -U UNI_COURSE_NOTES_DIR $UNI_SEM_NOTES_DIR/$UNI_COURSE
end

function set_hw_env
	cd $UNI_COURSE_DIR/hw/
	set -U UNI_HW (ls --only-dirs | fzf)

	set -U UNI_HW_DIR $UNI_SEM_DIR/$UNI_COURSE/hw/$UNI_HW
end


if test -z "$EDITOR"
	echo "please make sure \$EDITOR is set"
	exit 1
end

if test -z (which fzf)
	echo "please make sure `fzf` is installed"
	exit 1
end

if test -z "$UNI_DIR"
	read -f -P "where is the uni repository?\n> " UNI_DIR
end

if test -z "$UNI_NOTES_DIR"
	read -f -P "where is the uni-notes repository?\n> " UNI_NOTES_DIR
end

switch $argv[1]
	case switch
		set current_dir $(pwd)
		if test (count $argv[2..]) -eq 0
			set_course_env
		else
			switch $argv[2]
				case sem semester
					set_sem_env
				
				case course class
					if test -z "$UNI_SEM"; and test -z "$UNI_SEM_DIR"
						set_sem_env
					end
					set_course_env

				case hw homework
					if test -z "$UNI_COURSE"; and test -z "$UNI_COURSE_DIR"
						set_course_env
					end
					set_hw_env

				case both
					set_sem_env
					set_course_env

				case '*'
					echo "Unrecognized input."
			end
		end
		cd $current_dir
	
	case cd
		if test (count $argv[2..]) -eq 0
			cd $UNI_DIR
		else
			switch $argv[2]
				case course class
					cd $UNI_COURSE_DIR

				case sem semester
					cd $UNI_SEM_DIR

				case hw homework
					cd $UNI_HW_DIR

				case notes
					if test (count $argv[3..]) -eq 0
						cd $UNI_NOTES_DIR
					else
						switch $argv[3]
							case course class
								cd $UNI_COURSE_NOTES_DIR

							case sem semester
								cd $UNI_SEM_NOTES_DIR

							case '*'
								echo "Unrecognized input."
						end
					end

				case uni
					cd $UNI_DIR

				case '*'
					echo "Unrecognized input."
			end
		end

	case notes
		switch $argv[2]
			case lg git
				lazygit -p $UNI_NOTES_DIR

			case '*'
				echo "Unrecognized input."
		end


	case lg git
		if test (count $argv[2..]) -eq 0
			lazygit -p $UNI_DIR
		else
			switch $argv[2]
				case uni
					lazygit -p $UNI_DIR
				
				case notes
					lazygit -p $UNI_NOTES_DIR

				case '*'
					echo "Unrecognized input."
			end
		end

	case self-edit
		$EDITOR $script_location

	case flake
		$EDITOR $UNI_DIR/flake.nix

	case '*'
		echo "Unrecognized input."
end
